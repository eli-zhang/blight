### Starting build.
# Target: terminalPrint.ml.depends, tags: { package(ANSITerminal), extension:ml, file:terminalPrint.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules terminalPrint.ml > terminalPrint.ml.depends
# Target: terminalPrint.cmo, tags: { package(ANSITerminal), byte, compile, extension:cmo, extension:ml, file:terminalPrint.cmo, file:terminalPrint.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o terminalPrint.cmo terminalPrint.ml
# Target: disease.mli.depends, tags: { package(ANSITerminal), extension:mli, file:disease.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules disease.mli > disease.mli.depends
# Target: disease.cmi, tags: { package(ANSITerminal), byte, compile, extension:mli, file:disease.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o disease.cmi disease.mli
# Target: disease.ml.depends, tags: { package(ANSITerminal), extension:ml, file:disease.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules disease.ml > disease.ml.depends
# Target: disease.cmo, tags: { package(ANSITerminal), byte, compile, extension:cmo, extension:ml, file:disease.cmo, file:disease.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o disease.cmo disease.ml
# Target: civilization.mli.depends, tags: { package(ANSITerminal), extension:mli, file:civilization.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules civilization.mli > civilization.mli.depends
# Target: civilization.cmi, tags: { package(ANSITerminal), byte, compile, extension:mli, file:civilization.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o civilization.cmi civilization.mli
# Target: civilization.ml.depends, tags: { package(ANSITerminal), extension:ml, file:civilization.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules civilization.ml > civilization.ml.depends
# Target: civilization.cmo, tags: { package(ANSITerminal), byte, compile, extension:cmo, extension:ml, file:civilization.cmo, file:civilization.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o civilization.cmo civilization.ml
# Target: tile.mli.depends, tags: { package(ANSITerminal), extension:mli, file:tile.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules tile.mli > tile.mli.depends
# Target: tile.cmi, tags: { package(ANSITerminal), byte, compile, extension:mli, file:tile.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o tile.cmi tile.mli
# Target: tile.ml.depends, tags: { package(ANSITerminal), extension:ml, file:tile.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules tile.ml > tile.ml.depends
# Target: tile.cmo, tags: { package(ANSITerminal), byte, compile, extension:cmo, extension:ml, file:tile.cmo, file:tile.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o tile.cmo tile.ml
# Compilation successful.
