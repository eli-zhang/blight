### Starting build.
# Target: terminalPrint.ml.depends, tags: { package(ANSITerminal), extension:ml, file:terminalPrint.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules terminalPrint.ml > terminalPrint.ml.depends # cached
# Target: terminalPrint.cmo, tags: { package(ANSITerminal), byte, compile, extension:cmo, extension:ml, file:terminalPrint.cmo, file:terminalPrint.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o terminalPrint.cmo terminalPrint.ml # cached
# Target: disease.mli.depends, tags: { package(ANSITerminal), extension:mli, file:disease.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules disease.mli > disease.mli.depends
# Target: disease.cmi, tags: { package(ANSITerminal), byte, compile, extension:mli, file:disease.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o disease.cmi disease.mli
# Target: disease.ml.depends, tags: { package(ANSITerminal), extension:ml, file:disease.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules disease.ml > disease.ml.depends # cached
# Target: disease.cmo, tags: { package(ANSITerminal), byte, compile, extension:cmo, extension:ml, file:disease.cmo, file:disease.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o disease.cmo disease.ml
+ ocamlfind ocamlc -c -package ANSITerminal -o disease.cmo disease.ml
File "disease.ml", line 1:
Error: The implementation disease.ml
       does not match the interface disease.cmi:
       The module type `Disease' is required but not provided
       File "disease.mli", line 1, characters 0-119: Expected declaration
Command exited with code 2.
# Compilation unsuccessful.
