### Starting build.
# Target: terminalPrint.ml.depends, tags: { package(ANSITerminal), extension:ml, file:terminalPrint.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules terminalPrint.ml > terminalPrint.ml.depends # cached
# Target: terminalPrint.cmo, tags: { package(ANSITerminal), byte, compile, extension:cmo, extension:ml, file:terminalPrint.cmo, file:terminalPrint.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o terminalPrint.cmo terminalPrint.ml # cached
# Target: objects.ml.depends, tags: { package(ANSITerminal), extension:ml, file:objects.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules objects.ml > objects.ml.depends
# Target: objects.cmo, tags: { package(ANSITerminal), byte, compile, extension:cmo, extension:ml, file:objects.cmo, file:objects.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o objects.cmo objects.ml
# Target: infection.ml.depends, tags: { package(ANSITerminal), extension:ml, file:infection.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ANSITerminal -modules infection.ml > infection.ml.depends
# Target: infection.cmo, tags: { package(ANSITerminal), byte, compile, extension:cmo, extension:ml, file:infection.cmo, file:infection.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ANSITerminal -o infection.cmo infection.ml
# Compilation successful.
